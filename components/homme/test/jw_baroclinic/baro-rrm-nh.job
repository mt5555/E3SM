#!/bin/tcsh 
#
#  This script will configure, build and run HOMME using the
#  Jablownowski and Williamson baroclinic instability test case
#  with a user specified number of tracers.
#
#  This script contains configurations for ne16, ne30, ne60, ne120, ne240
#  The remap timestep and viscosity coefficients are scaled with resolution
#  all other subcycling parameters are set to mimic that
#  used by CAM5 1/4 degree.  So the relative performance, per timstep
#  of the different components should be similar. (but for lower resolutions
#  this will not be the most efficient choices)
#
#
#SBATCH --job-name jwbnh
#XXXSBATCH -p acme-medium
#XXXSBATCH --account=condo
#SBATCH --constraint=cpu
#SBATCH --account=m4749    # m4749 or e3sm 

#XXSBATCH -N 8  
#XXSBATCH --qos=debug
#SBATCH -N 261
#SBATCH --qos=regular # preempt   # regular
#SBATCH --time=24:00:00

#
#  set paths to source code, build directory and run directory
#
set wdir =  ~/scratch1/preqx             # run directory
#set HOMME = ~/codes/acme/components/homme                 # HOMME svn checkout     
set HOMME = `pwd`/../..
set input = $HOMME/test/jw_baroclinic    # input files for test case
set vdir = $HOMME/test/vcoord            # vertical coordinate files
set bld = $wdir/bld26                    # cmake/build directory

#set output = `~/codes/acme/cime/CIME/Tools/get_case_env`
#eval $output
#module list

#set MACH = $HOMME/cmake/machineFiles/anvil.cmake
set MACH = $HOMME/cmake/machineFiles/perlmutter-cpu.cmake
setenv CRAY_CUDA_PROXY 1
set echo


#
#  mpi run command
#
set NCPU = 1
setenv OMP_NUM_THREADS 4
#setenv OMP_NUM_THREADS 8
#setenv OMP_STACKSIZE 1024MB

if ( $?SLURM_NNODES ) then
   set mpirun = "srun -K -c $OMP_NUM_THREADS -N $SLURM_NNODES"
   #set mpirun = "srun -K -c 32 -N $SLURM_NNODES"
else
   set mpirun = "srun -K -c $OMP_NUM_THREADS"
endif
echo $mpirun

# Test case: JW Baroclinic instability 
# default is no rotation, with u perturbation
set u_perturb = 1
set rotate = 0

# ne30: 1.5min  20 nodes (4 tracers)
# ne120 16min    20 nodes (0 tracers)
# ne240 128min   20 nodes
# ne240 ?min   60 nodes
                  # number of elemnets:  6*ne*ne
#set ne = 30        # horizontal resolution   4,16,30,60,120,240
set ne = 0


# CAM4
set nlev=26       # vertical resolution
set qsize = 0     # number of passive tracers


# simulate CAM5:
#set nlev=30
#set qsize=25

# simulate ACME v1
# NE=120, nlev=72, qsize=35
#set nlev=72
#set qsize=0

set namelist = jw_baroclinic.nl  # CAM-style, vertically lagrangian
#set namelist = jw_baroclinic-eul.nl

#
#  BUILD PREQX
#
mkdir -p $bld
cd $bld
set exe = $bld/src/theta-l/theta-l
set build = 1  # set to 1 to force build
#rm $bld/CMakeCache.txt    # remove this file to force re-configure
if (! -f CMakeCache.txt) then
   rm -rf CMakeFiles CMakeCache.txt src
   #rm -rf utils/pio  utils/timing utils/cprnc   # may also need to do this
   echo "running CMAKE to configure the model"

   cmake -C $MACH -DQSIZE_D=$qsize -DPREQX_PLEV=$nlev -DPREQX_NP=4  \
   -DPREQX_USE_PIO=TRUE \
   -DBUILD_HOMME_SWEQX=FALSE                     \
   -DPREQX_USE_ENERGY=TRUE  $HOMME

   make -j4 clean
endif
if ( ! -f $exe) set build = 1   # no exe, force build
if ( $build == 1 ) then
   make -j4 theta-l
   if ($status) exit
endif




#
#  run each different resolution in a different directory
#
set name = jwnh-ne${ne}-nlev${nlev}-qsize${qsize}
set run = $wdir/$name
set mesh_file = /dev/null
set hypervis_scaling = 3
set hypervis_subcycle=1    # most tests can use 1, high-res with nu_top>0 may require 3

if ( $ne == 0 ) then
    # CAM defaults
    #set mesh_file="/ascldap/users/mataylo/codes/mapping/grids/wpacific_v2.g"
    #set mesh_file="/ascldap/users/mataylo/codes/mapping/grids/mountain_10_x8.g"
    #set mesh_file="$HOME/scratch1/mapping/grids/mountain_10_x8.g"
    #set mesh_file="$HOME/scratch1/mapping/grids/CAne32x128_Altamont100m_v2.g"
    set mesh_file="$HOME/proj/mapping/grids/CAne32x128_Altamont100m_v2.g"
    #set mesh_file="$HOME/proj/mapping/grids/mountain_10_x8.g"
    set tstep=.25
    set hypervis_subcycle=1
    
    #set tstep=75
    #set hypervis_subcycle=2

    set hypervis_scaling = 3.0
    set nu = 3.4e-8
endif

if ( $ne == 4 ) then
   set tstep=1800
   set nu=4.5e17
endif
if ( $ne == 16 ) then
   set tstep=600
   set nu=7e15
endif
if ( $ne == 30 ) then
   set tstep=300
   set nu=1e15
    set hypervis_scaling = 3.0
    set hypervis_subcycle=1
    set nu = 3.4e-8
endif
if ( $ne == 60 ) then
   set tstep=150
   set nu=1e14
endif
if ( $ne == 120 ) then
   set tstep=75
   set nu=1e13
endif
if ( $ne == 240 ) then
   set tstep=40
   set nu=1e12
endif



# diagnostics printed to stdout
set sfreq=300     # every 300 secends
set sfreq=`echo "$sfreq / $tstep" | bc`





mkdir -p $run/movies
cd $run


# default: assume pure sigma levels:
set vfile_mid     = "./sabm-$nlev.ascii"
set vfile_int     = "./sabi-$nlev.ascii"

# special cases:
# copy vertical level files to run directory
if ( $nlev == 26 ) then
   set vfile_mid     = "./camm-26.ascii"
   set vfile_int     = "./cami-26.ascii"
endif
if ( $nlev == 30 ) then
   set vfile_mid     = "./camm-30.ascii"
   set vfile_int     = "./cami-30.ascii"
endif
if ( $nlev == 60 ) then
   set vfile_mid     = "./aspL60_mid.ascii"
   set vfile_int     = "./aspL60_int.ascii"
endif
if ( $nlev == 72 ) then
   set vfile_mid     = "./acme-72m.ascii"
   set vfile_int     = "./acme-72i.ascii"
endif

# copy all vertical levels to run directory
rsync -a  $vdir/*.ascii  $run   


#  create a new namelist from original ne16 template:
rm -f input.nl
sed s/ne=.\*/ne=$ne/ $input/$namelist |\
sed s/tstep=.\*/tstep=$tstep/ | \
sed s/tstep_type.\*/tstep_type=9/ | \
sed s/nu=.\*/nu=$nu/ | \
sed s/nu_div=.\*/nu_div=$nu/ | \
sed s/nu_p=.\*/nu_p=$nu/ | \
sed s/nu_q=.\*/nu_q=$nu/ | \
sed s/NThreads.\*/NThreads=$OMP_NUM_THREADS/ | \
sed s/statefreq.\*/statefreq=$sfreq/ |\
sed s/hypervis_scaling.\*/hypervis_scaling=$hypervis_scaling/ |\
sed s/hypervis_subcycle.\*/hypervis_subcycle=$hypervis_subcycle/ |\
sed s/u_perturb.\*/"u_perturb = $u_perturb"/   |\
sed s/rotate_grid.\*/"rotate_grid = $rotate"/  |\
sed s:mesh_file.\*:mesh_file="'$mesh_file'": | \
sed s:theta_hydrostatic_mode.\*:theta_hydrostatic_mode=.false.: | \
sed s:vfile_mid.\*:"vfile_mid = '$vfile_mid'":  |\
sed s:vfile_int.\*:"vfile_int = '$vfile_int'":  |\
sed s/qsize.\*/"qsize = $qsize"/  > input.nl





date
$mpirun $exe  < input.nl
date

ncl $input/zeta.ncl

